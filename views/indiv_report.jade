extends layout

block css
	link(rel="stylesheet" href="/font-awesome/css/font-awesome.min.css")
	- tabletheme = "sortable-theme-bootstrap"
	link(rel='stylesheet', href='/stylesheets/#{tabletheme}.css')

block content
	- report = JSON.parse(report)
	.container
		.row.hidden-print
			.col-xs-12
				h1 Diagnostic Predictive Scales (DPS) Report
				p.lead The DPS is a screen and is not diagnostic. It is not a substitute for a thorough clinical evaluation.
				p In any of the tables, click a column header to sort with it.
				.btn-group
					a.btn.btn-secondary(href="/report") 
						i.fa.fa-chevron-left(aria-hidden="true")
						|  Back to all reports
					a.btn.btn-secondary(onClick="window.print()") Print Report
					a.btn.btn-secondary(href="#{report.subjectID}" download) Save Report
		mixin tableRow(title, name, cap)
			tr
				td
					if cap
						strong.text-capitalize= title
					else
						=title
				td= name 
		//- t-3 adds some space at the top of the row
		.row.m-t-3.print-expand
			-
				col1 = "col-sm-4"
				col2 = "col-sm-8"
			div.print-expand(class=col1)
				h2 Report for #{report.subjectID}
				- optionalSections = ["site", "sponsor", "protocol", "description"]
				br 
				table.table.table-striped
					+tableRow('Total Symptom Score', report.dpsScore, true)
					+tableRow('Total Impairment Score', report.impairmentScore, true)
					+tableRow('Language', report.language, true)
					+tableRow('Interview Date', report.lastUpdated.substr(0,10), true)
					each section in optionalSections
						//- Square bracket notation allows selection of properties using variables
						if report[section] 
							+tableRow(section, report[section], true)
				br
			div.print-expand(class=col2)
				if report.positiveReasons.length > 0
					h2 Further Evaluation Recommended
					ol
						each reason in report.positiveReasons
							li= reason
				else
					h2 Further Evaluation Not Recommended
					em A youth should move on to a clinical interview if:
					ol
						li Either of the suicide items have been endorsed.
						li A specific disorder is Present in the Symptom Scale AND the Total DPS Impairment Score is 6 or more.
						li If the Total DPS Symptom Score is 9 or more (valid ONLY if Social Phobia, Generalized Anxiety, Depression, Alcohol, Marijuana, and Other Substances have been included in the screen).
						li Total DPS Symptom Score is 7 or more (valid ONLY if Social Phobia, Generalized Anxiety and Depression have been included in the screen). 
						li Alcohol, Marijuana, or Other Substance is Present, regardless of Impairment Score.
						li The youth requests a clinical interview during the debriefing or indicates problems not addressed on the DPS. 

				em Additional reasons for evaluation:
				ul
					li The youth requests a clinical interview during the debriefing or indicates problems not addressed on the DPS
					li Youth expresses upset in open-ended response in the #[a(href="#Conclusion") Conclusion section] 
		.row.m-t-3
			.col-sm-6.print-expand
				h2#scale Symptom Scale
				table.table.table-striped(class="#{tabletheme}" data-sortable)
					thead
						tr
							th Section
							th Status
							th Survey Score
							th Threshold
					tbody
						mixin symptomScaleCols(section, status, threshold, userScore)
							tr
								td
									a(href="##{section}")= section
								td
									if threshold
										strong Present
									else
										| Absent
								td= threshold
								td= userScore
						each section in report.formResponses
							- var sectionHasScore = section.hasOwnProperty('score')
							if sectionHasScore
								if section.name !== 'Impairment' 
									- var sectionSymptomScore = symptomScale[section.name]
									if section.score >= sectionSymptomScore
										+symptomScaleCols(section.name, true, section.score, sectionSymptomScore)
									else
										+symptomScaleCols(section.name, false, section.score, sectionSymptomScore)
			.col-sm-6.print-expand
				h2 Impairment Scale
				- var impairThreshold = 6
				if report.impairmentScore > impairThreshold
					strong Present:
					|  Score of #{ report.impairmentScore } is greater than or equal to the threshold of #{ impairThreshold }
				else 
					p Absent: Score of #{ report.impairmentScore } is less than the threshold of #{ impairThreshold }
				p: a(href="#Impairment") Go to Impairment section
				if report.clinicSig
					h2 Clinically Significant Information
					table.table.table-striped
						each val, key in report.clinicSig
							+tableRow(key, val, false)
		.row.m-t-3
			div.print-expand(class="#{col2}")
				-
					one   = 6
					two   = 4
					three = 12 - one - two
					col = function(num) { 
						return 'col-sm-' + num
					}
					hasResponse = function(answer) {
						if (typeof answer === 'string') {
							return answer;
						} else if (typeof answer === 'object') {
							return answer.length;
						} else { // responding 'no' to a Health question skips the followup, therefore undefined
							return false;
						}
					}
				each section in report.formResponses
					- var sectionHasScore = section.hasOwnProperty('score')
					h3(id="#{section.name}")= section.name
					a(href="#scale") Back to Symptom Scale
					table.table.table-striped(class="#{tabletheme}" data-sortable)
						thead
							tr
								th(class="#{col(one)}" data-sortable-type="numeric") Question
								if sectionHasScore
									th(class="#{col(two)}") Answer
									th(class="#{col(three)}") Score
								else
									th(class="#{col(two + three)}") Answer
						tbody
							- questionNum  = 1
							each response in section.qa
								//- if there's no followup response, don't display the row for followup question and the blank answer
								if hasResponse(response.answer)
									tr
										td(class="#{col(one)}") #{questionNum}. #{response.question}
										if sectionHasScore
											td(class="#{col(two)}") 
												//- array of checkbox responses
												if typeof response.answer === 'object' 
													ul.list-unstyled
														each item in response.answer
															li - #{item}
												else
													=response.answer
											td(class="#{col(three)}") 
												if response.score === 0
													=response.score
												else if response.score >= 1
													strong= response.score
												else
													| -
										else 
											td(class="#{col(two + three)}") #{response.answer}
									- questionNum++
					if sectionHasScore
						table.table
							tr
								td.text-xs-right(class="#{col(one + two)}")
									b #{section.name} Score
								td(class="#{col(three)}")
									strong= section.score



block scripts
	script(src='/javascripts/libraries/sortable.min.js')